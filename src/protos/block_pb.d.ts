// Copyright (c) 2023 MASSA LABS <info@massa.net>

// @generated by protoc-gen-es v1.2.0 with parameter "target=js+ts+dts"
// @generated from file block.proto (package massa.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Slot } from "./slot_pb.js";
import type { SignedEndorsement } from "./endorsement_pb.js";
import type { SignedOperation } from "./operation_pb.js";

/**
 * Block
 *
 * @generated from message massa.api.v1.Block
 */
export declare class Block extends Message<Block> {
  /**
   * Signed header
   *
   * @generated from field: massa.api.v1.SignedBlockHeader header = 1;
   */
  header?: SignedBlockHeader;

  /**
   * Operations ids
   *
   * @generated from field: repeated string operations = 2;
   */
  operations: string[];

  constructor(data?: PartialMessage<Block>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.Block";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Block;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Block;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Block;

  static equals(a: Block | PlainMessage<Block> | undefined, b: Block | PlainMessage<Block> | undefined): boolean;
}

/**
 * Filled block
 *
 * @generated from message massa.api.v1.FilledBlock
 */
export declare class FilledBlock extends Message<FilledBlock> {
  /**
   * Signed header
   *
   * @generated from field: massa.api.v1.SignedBlockHeader header = 1;
   */
  header?: SignedBlockHeader;

  /**
   * Operations
   *
   * @generated from field: repeated massa.api.v1.FilledOperationTuple operations = 2;
   */
  operations: FilledOperationTuple[];

  constructor(data?: PartialMessage<FilledBlock>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.FilledBlock";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilledBlock;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilledBlock;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilledBlock;

  static equals(a: FilledBlock | PlainMessage<FilledBlock> | undefined, b: FilledBlock | PlainMessage<FilledBlock> | undefined): boolean;
}

/**
 * Block header
 *
 * @generated from message massa.api.v1.BlockHeader
 */
export declare class BlockHeader extends Message<BlockHeader> {
  /**
   * Slot
   *
   * @generated from field: massa.api.v1.Slot slot = 1;
   */
  slot?: Slot;

  /**
   * parents
   *
   * @generated from field: repeated string parents = 2;
   */
  parents: string[];

  /**
   * All operations hash
   *
   * @generated from field: string operation_merkle_root = 3;
   */
  operationMerkleRoot: string;

  /**
   * Signed endorsements
   *
   * @generated from field: repeated massa.api.v1.SignedEndorsement endorsements = 4;
   */
  endorsements: SignedEndorsement[];

  constructor(data?: PartialMessage<BlockHeader>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.BlockHeader";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockHeader;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockHeader;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockHeader;

  static equals(a: BlockHeader | PlainMessage<BlockHeader> | undefined, b: BlockHeader | PlainMessage<BlockHeader> | undefined): boolean;
}

/**
 * Filled Operation Tuple
 *
 * @generated from message massa.api.v1.FilledOperationTuple
 */
export declare class FilledOperationTuple extends Message<FilledOperationTuple> {
  /**
   * Operation id
   *
   * @generated from field: string operation_id = 1;
   */
  operationId: string;

  /**
   * Signed operation
   *
   * @generated from field: massa.api.v1.SignedOperation operation = 2;
   */
  operation?: SignedOperation;

  constructor(data?: PartialMessage<FilledOperationTuple>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.FilledOperationTuple";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilledOperationTuple;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilledOperationTuple;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilledOperationTuple;

  static equals(a: FilledOperationTuple | PlainMessage<FilledOperationTuple> | undefined, b: FilledOperationTuple | PlainMessage<FilledOperationTuple> | undefined): boolean;
}

/**
 * Signed block
 *
 * @generated from message massa.api.v1.SignedBlock
 */
export declare class SignedBlock extends Message<SignedBlock> {
  /**
   * Block
   *
   * @generated from field: massa.api.v1.Block content = 1;
   */
  content?: Block;

  /**
   * A cryptographically generated value using `serialized_data` and a public key.
   *
   * @generated from field: string signature = 2;
   */
  signature: string;

  /**
   * The public-key component used in the generation of the signature
   *
   * @generated from field: string content_creator_pub_key = 3;
   */
  contentCreatorPubKey: string;

  /**
   * Derived from the same public key used to generate the signature
   *
   * @generated from field: string content_creator_address = 4;
   */
  contentCreatorAddress: string;

  /**
   * A secure hash of the data. See also [massa_hash::Hash]
   *
   * @generated from field: string id = 5;
   */
  id: string;

  constructor(data?: PartialMessage<SignedBlock>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.SignedBlock";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedBlock;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedBlock;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedBlock;

  static equals(a: SignedBlock | PlainMessage<SignedBlock> | undefined, b: SignedBlock | PlainMessage<SignedBlock> | undefined): boolean;
}

/**
 * Signed block header
 *
 * @generated from message massa.api.v1.SignedBlockHeader
 */
export declare class SignedBlockHeader extends Message<SignedBlockHeader> {
  /**
   * BlockHeader
   *
   * @generated from field: massa.api.v1.BlockHeader content = 1;
   */
  content?: BlockHeader;

  /**
   * A cryptographically generated value using `serialized_data` and a public key.
   *
   * @generated from field: string signature = 2;
   */
  signature: string;

  /**
   * The public-key component used in the generation of the signature
   *
   * @generated from field: string content_creator_pub_key = 3;
   */
  contentCreatorPubKey: string;

  /**
   * Derived from the same public key used to generate the signature
   *
   * @generated from field: string content_creator_address = 4;
   */
  contentCreatorAddress: string;

  /**
   * A secure hash of the data. See also [massa_hash::Hash]
   *
   * @generated from field: string id = 5;
   */
  id: string;

  constructor(data?: PartialMessage<SignedBlockHeader>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.SignedBlockHeader";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedBlockHeader;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedBlockHeader;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedBlockHeader;

  static equals(a: SignedBlockHeader | PlainMessage<SignedBlockHeader> | undefined, b: SignedBlockHeader | PlainMessage<SignedBlockHeader> | undefined): boolean;
}

