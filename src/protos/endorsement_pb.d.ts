// Copyright (c) 2023 MASSA LABS <info@massa.net>

// @generated by protoc-gen-es v1.2.0 with parameter "target=js+ts+dts"
// @generated from file endorsement.proto (package massa.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import type { Slot } from "./slot_pb.js";

/**
 * An endorsement, as sent in the network
 *
 * @generated from message massa.api.v1.Endorsement
 */
export declare class Endorsement extends Message<Endorsement> {
  /**
   * Slot in which the endorsement can be included
   *
   * @generated from field: massa.api.v1.Slot slot = 1;
   */
  slot?: Slot;

  /**
   * Endorsement index inside the including block
   *
   * @generated from field: fixed32 index = 2;
   */
  index: number;

  /**
   * Hash of endorsed block
   * This is the parent in thread `self.slot.thread` of the block in which the endorsement is included
   *
   * @generated from field: string endorsed_block = 3;
   */
  endorsedBlock: string;

  constructor(data?: PartialMessage<Endorsement>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.Endorsement";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Endorsement;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Endorsement;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Endorsement;

  static equals(a: Endorsement | PlainMessage<Endorsement> | undefined, b: Endorsement | PlainMessage<Endorsement> | undefined): boolean;
}

/**
 * Signed endorsement
 *
 * @generated from message massa.api.v1.SignedEndorsement
 */
export declare class SignedEndorsement extends Message<SignedEndorsement> {
  /**
   * Endorsement
   *
   * @generated from field: massa.api.v1.Endorsement content = 1;
   */
  content?: Endorsement;

  /**
   * A cryptographically generated value using `serialized_data` and a public key.
   *
   * @generated from field: string signature = 2;
   */
  signature: string;

  /**
   * The public-key component used in the generation of the signature
   *
   * @generated from field: string content_creator_pub_key = 3;
   */
  contentCreatorPubKey: string;

  /**
   * Derived from the same public key used to generate the signature
   *
   * @generated from field: string content_creator_address = 4;
   */
  contentCreatorAddress: string;

  /**
   * A secure hash of the data. See also [massa_hash::Hash]
   *
   * @generated from field: string id = 5;
   */
  id: string;

  constructor(data?: PartialMessage<SignedEndorsement>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "massa.api.v1.SignedEndorsement";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedEndorsement;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedEndorsement;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedEndorsement;

  static equals(a: SignedEndorsement | PlainMessage<SignedEndorsement> | undefined, b: SignedEndorsement | PlainMessage<SignedEndorsement> | undefined): boolean;
}

