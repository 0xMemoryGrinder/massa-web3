// Copyright (c) 2023 MASSA LABS <info@massa.net>

// @generated by protoc-gen-es v1.2.0 with parameter "target=js+ts+dts"
// @generated from file block.proto (package massa.api.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";
import { Slot } from "./slot_pb.js";
import { SignedEndorsement } from "./endorsement_pb.js";
import { SignedOperation } from "./operation_pb.js";

/**
 * Block
 *
 * @generated from message massa.api.v1.Block
 */
export class Block extends Message<Block> {
  /**
   * Signed header
   *
   * @generated from field: massa.api.v1.SignedBlockHeader header = 1;
   */
  header?: SignedBlockHeader;

  /**
   * Operations ids
   *
   * @generated from field: repeated string operations = 2;
   */
  operations: string[] = [];

  constructor(data?: PartialMessage<Block>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.Block";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "header", kind: "message", T: SignedBlockHeader },
    { no: 2, name: "operations", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): Block {
    return new Block().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): Block {
    return new Block().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): Block {
    return new Block().fromJsonString(jsonString, options);
  }

  static equals(a: Block | PlainMessage<Block> | undefined, b: Block | PlainMessage<Block> | undefined): boolean {
    return proto3.util.equals(Block, a, b);
  }
}

/**
 * Filled block
 *
 * @generated from message massa.api.v1.FilledBlock
 */
export class FilledBlock extends Message<FilledBlock> {
  /**
   * Signed header
   *
   * @generated from field: massa.api.v1.SignedBlockHeader header = 1;
   */
  header?: SignedBlockHeader;

  /**
   * Operations
   *
   * @generated from field: repeated massa.api.v1.FilledOperationTuple operations = 2;
   */
  operations: FilledOperationTuple[] = [];

  constructor(data?: PartialMessage<FilledBlock>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.FilledBlock";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "header", kind: "message", T: SignedBlockHeader },
    { no: 2, name: "operations", kind: "message", T: FilledOperationTuple, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilledBlock {
    return new FilledBlock().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilledBlock {
    return new FilledBlock().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilledBlock {
    return new FilledBlock().fromJsonString(jsonString, options);
  }

  static equals(a: FilledBlock | PlainMessage<FilledBlock> | undefined, b: FilledBlock | PlainMessage<FilledBlock> | undefined): boolean {
    return proto3.util.equals(FilledBlock, a, b);
  }
}

/**
 * Block header
 *
 * @generated from message massa.api.v1.BlockHeader
 */
export class BlockHeader extends Message<BlockHeader> {
  /**
   * Slot
   *
   * @generated from field: massa.api.v1.Slot slot = 1;
   */
  slot?: Slot;

  /**
   * parents
   *
   * @generated from field: repeated string parents = 2;
   */
  parents: string[] = [];

  /**
   * All operations hash
   *
   * @generated from field: string operation_merkle_root = 3;
   */
  operationMerkleRoot = "";

  /**
   * Signed endorsements
   *
   * @generated from field: repeated massa.api.v1.SignedEndorsement endorsements = 4;
   */
  endorsements: SignedEndorsement[] = [];

  constructor(data?: PartialMessage<BlockHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.BlockHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "slot", kind: "message", T: Slot },
    { no: 2, name: "parents", kind: "scalar", T: 9 /* ScalarType.STRING */, repeated: true },
    { no: 3, name: "operation_merkle_root", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "endorsements", kind: "message", T: SignedEndorsement, repeated: true },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): BlockHeader {
    return new BlockHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): BlockHeader {
    return new BlockHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): BlockHeader {
    return new BlockHeader().fromJsonString(jsonString, options);
  }

  static equals(a: BlockHeader | PlainMessage<BlockHeader> | undefined, b: BlockHeader | PlainMessage<BlockHeader> | undefined): boolean {
    return proto3.util.equals(BlockHeader, a, b);
  }
}

/**
 * Filled Operation Tuple
 *
 * @generated from message massa.api.v1.FilledOperationTuple
 */
export class FilledOperationTuple extends Message<FilledOperationTuple> {
  /**
   * Operation id
   *
   * @generated from field: string operation_id = 1;
   */
  operationId = "";

  /**
   * Signed operation
   *
   * @generated from field: massa.api.v1.SignedOperation operation = 2;
   */
  operation?: SignedOperation;

  constructor(data?: PartialMessage<FilledOperationTuple>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.FilledOperationTuple";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "operation_id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "operation", kind: "message", T: SignedOperation },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): FilledOperationTuple {
    return new FilledOperationTuple().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): FilledOperationTuple {
    return new FilledOperationTuple().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): FilledOperationTuple {
    return new FilledOperationTuple().fromJsonString(jsonString, options);
  }

  static equals(a: FilledOperationTuple | PlainMessage<FilledOperationTuple> | undefined, b: FilledOperationTuple | PlainMessage<FilledOperationTuple> | undefined): boolean {
    return proto3.util.equals(FilledOperationTuple, a, b);
  }
}

/**
 * Signed block
 *
 * @generated from message massa.api.v1.SignedBlock
 */
export class SignedBlock extends Message<SignedBlock> {
  /**
   * Block
   *
   * @generated from field: massa.api.v1.Block content = 1;
   */
  content?: Block;

  /**
   * A cryptographically generated value using `serialized_data` and a public key.
   *
   * @generated from field: string signature = 2;
   */
  signature = "";

  /**
   * The public-key component used in the generation of the signature
   *
   * @generated from field: string content_creator_pub_key = 3;
   */
  contentCreatorPubKey = "";

  /**
   * Derived from the same public key used to generate the signature
   *
   * @generated from field: string content_creator_address = 4;
   */
  contentCreatorAddress = "";

  /**
   * A secure hash of the data. See also [massa_hash::Hash]
   *
   * @generated from field: string id = 5;
   */
  id = "";

  constructor(data?: PartialMessage<SignedBlock>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.SignedBlock";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "content", kind: "message", T: Block },
    { no: 2, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content_creator_pub_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "content_creator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedBlock {
    return new SignedBlock().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedBlock {
    return new SignedBlock().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedBlock {
    return new SignedBlock().fromJsonString(jsonString, options);
  }

  static equals(a: SignedBlock | PlainMessage<SignedBlock> | undefined, b: SignedBlock | PlainMessage<SignedBlock> | undefined): boolean {
    return proto3.util.equals(SignedBlock, a, b);
  }
}

/**
 * Signed block header
 *
 * @generated from message massa.api.v1.SignedBlockHeader
 */
export class SignedBlockHeader extends Message<SignedBlockHeader> {
  /**
   * BlockHeader
   *
   * @generated from field: massa.api.v1.BlockHeader content = 1;
   */
  content?: BlockHeader;

  /**
   * A cryptographically generated value using `serialized_data` and a public key.
   *
   * @generated from field: string signature = 2;
   */
  signature = "";

  /**
   * The public-key component used in the generation of the signature
   *
   * @generated from field: string content_creator_pub_key = 3;
   */
  contentCreatorPubKey = "";

  /**
   * Derived from the same public key used to generate the signature
   *
   * @generated from field: string content_creator_address = 4;
   */
  contentCreatorAddress = "";

  /**
   * A secure hash of the data. See also [massa_hash::Hash]
   *
   * @generated from field: string id = 5;
   */
  id = "";

  constructor(data?: PartialMessage<SignedBlockHeader>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "massa.api.v1.SignedBlockHeader";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "content", kind: "message", T: BlockHeader },
    { no: 2, name: "signature", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "content_creator_pub_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "content_creator_address", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "id", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): SignedBlockHeader {
    return new SignedBlockHeader().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): SignedBlockHeader {
    return new SignedBlockHeader().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): SignedBlockHeader {
    return new SignedBlockHeader().fromJsonString(jsonString, options);
  }

  static equals(a: SignedBlockHeader | PlainMessage<SignedBlockHeader> | undefined, b: SignedBlockHeader | PlainMessage<SignedBlockHeader> | undefined): boolean {
    return proto3.util.equals(SignedBlockHeader, a, b);
  }
}

